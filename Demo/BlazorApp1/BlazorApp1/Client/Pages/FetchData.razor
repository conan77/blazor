@page "/fetchdata"
@using System.Diagnostics
@using BlazorApp1.Shared
@using Microsoft.AspNetCore.Components.Rendering
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div><span>uri:</span><span>@uri</span></div>
    <div><span>读取</span><span>@para.Num</span><span>条数据</span><span>花费了</span><span>@wastTime</span></div>
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    WeatherForecastPara para = new WeatherForecastPara() { Num = 1000 };
    WeatherForecast[] forecasts;
    string wastTime;
    Stopwatch watch;
    string uri;
    protected override async Task OnInitializedAsync()
    {
        watch = Stopwatch.StartNew();
        uri = $"WeatherForecast?num={para.Num}";
        forecasts = await Http.GetJsonAsync<WeatherForecast[]>(uri);
        watch.Stop();
        wastTime =$"{watch.Elapsed.Hours}小时{watch.Elapsed.Minutes}分钟{watch.Elapsed.Seconds}秒{watch.Elapsed.Milliseconds}毫秒";
    }
}
